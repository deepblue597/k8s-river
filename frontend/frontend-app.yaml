apiVersion: v1
kind: Service
metadata:
  name: frontend-service # name of the service
spec:
  type: LoadBalancer # for cloud providers o/w use NodePort
  selector:
    app: frontend-app # must match the app label in the deployment
  ports:
    - port: 8501 # port exposed by the service

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-app
spec:
  replicas: 1 # number of pod replicas. Can be adjusted with HPA
  selector:
    matchLabels:
      app: frontend-app # must match the app label in the pod template
  template:
    metadata:
      labels:
        app: frontend-app # label for the pod
    spec:
      containers:
        - name: frontend-app
          image: deepblue597/river-frontend:latest
          ports:
            - containerPort: 8501 # port the container listens on
          env:
            - name: BACKEND_IP
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: BACKEND_IP
            - name: BACKEND_PORT
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: BACKEND_PORT
          # Health checks
          livenessProbe:
            httpGet:
              path: /
              port: 8501
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8501
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: 8501
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
