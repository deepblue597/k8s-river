apiVersion: v1
kind: Service
metadata:
  name: grafana-service # name of the service
spec:
  selector:
    app: grafana-app # must match the app label in the deployment
  ports:
    - port: 3000
      name: grafana
      nodePort: 30300 # External access via node-ip:30300
  type: NodePort # Use NodePort for external access

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-app # name of the deployment
spec:
  replicas: 1 # number of pod replicas
  selector:
    matchLabels:
      app: grafana-app # must match the app label in the pod template
  template:
    metadata:
      labels:
        app: grafana-app # label for the pod
    spec:
      securityContext:
        fsGroup: 472
      containers:
        - name: grafana # name of the container
          image: grafana/grafana-enterprise
          securityContext:
            runAsUser: 472
            runAsGroup: 472
          resources:
            requests:
              memory: "256Mi"
              cpu: "300m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - containerPort: 3000 # port the container listens on
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: GF_SECURITY_ADMIN_USER
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: GF_SECURITY_ADMIN_PASSWORD
            - name: GF_DATABASE_TYPE
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: GF_DATABASE_TYPE
            - name: GF_SECURITY_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: GF_SECURITY_SECRET_KEY
            - name: GF_SECURITY_DISABLE_GRAVATAR
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: GF_SECURITY_DISABLE_GRAVATAR
            - name: GF_USERS_ALLOW_SIGN_UP
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: GF_USERS_ALLOW_SIGN_UP
            - name: GF_USERS_ALLOW_ORG_CREATE
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: GF_USERS_ALLOW_ORG_CREATE
            - name: GF_AUTH_ANONYMOUS_ENABLED
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: GF_AUTH_ANONYMOUS_ENABLED
            - name: GF_LOG_LEVEL
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: GF_LOG_LEVEL
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
