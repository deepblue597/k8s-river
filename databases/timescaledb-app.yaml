apiVersion: v1
kind: Service
metadata:
  name: timescaledb-service
spec:
  selector:
    app: timescaledb-app
  type: ClusterIP # Regular service for application connections
  ports:
    - port: 5432
      name: postgres
      targetPort: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: timescaledb-headless
spec:
  selector:
    app: timescaledb-app
  clusterIP: None # Headless service for StatefulSet and Patroni
  ports:
    - port: 5432
      name: postgres

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: timescaledb-app # name of the stateful set
spec:
  selector:
    matchLabels:
      app: timescaledb-app # must match the app label in the pod template
  serviceName: "timescaledb-headless"
  replicas: 2
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: timescaledb-app # label for the pod
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: init-permissions
          image: alpine:latest
          command:
            - sh
            - -c
            - |
              chown -R 1000:1000 /pgdata &&
              chmod -R 755 /pgdata &&
              echo 'Permissions set successfully'
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: pgdata
              mountPath: /pgdata
      containers:
        - name: timescaledb
          image: timescale/timescaledb-ha:pg17
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: POSTGRES_USER
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: POSTGRES_DB
            - name: POSTGRES_REPLICATOR_USER
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: POSTGRES_REPLICATOR_USER
            - name: POSTGRES_REPLICATOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: POSTGRES_REPLICATOR_PASSWORD
            - name: PGDATA
              value: /pgdata
            - name: TIMESCALEDB_TELEMETRY
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: TIMESCALEDB_TELEMETRY
            - name: TS_TUNE_MEMORY
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: TS_TUNE_MEMORY
            - name: TS_TUNE_NUM_CPUS
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: TS_TUNE_NUM_CPUS
            - name: PATRONI_SCOPE
              value: timescaledb-cluster
            - name: PATRONI_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: PATRONI_KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PATRONI_KUBERNETES_LABELS
              value: "app: timescaledb-app"
            - name: PATRONI_SUPERUSER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: POSTGRES_USER
            - name: PATRONI_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: POSTGRES_PASSWORD
            - name: PATRONI_REPLICATION_USERNAME
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: POSTGRES_REPLICATOR_USER
            - name: PATRONI_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secret
                  key: POSTGRES_REPLICATOR_PASSWORD
          volumeMounts: # Mount the persistent volume
            - name: pgdata
              mountPath: /pgdata # Mount the volume at /pgdata
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            initialDelaySeconds: 60
            periodSeconds: 30
  volumeClaimTemplates: # Define the volume claim template
    - metadata:
        name: pgdata
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
